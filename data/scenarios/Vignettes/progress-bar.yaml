version: 1
name: Progress bar
description: |
  A progress bar example that gradually fills up.
seed: 0
objectives:
  - goal:
      - Wait for all progress bars to fill up.
    condition: |
      turn east;
      let c = e <- scan down; if (e != inr "tree") {fail "not done"} {} in
      teleport self (1,-1); c; move; c; move; c; move; c; move; c; move; c; move; c; move; c; move; c; move; c;
      teleport self (1,-5); c; move; c; move; c; move; c; move; c; move; c; move; c; move; c; move; c; move; c;
      teleport self (1,-9); c; move; c; move; c; move; c; move; c; move; c; move; c; move; c; move; c; move; c;
      pure true
solution: |
  wait 100;
robots:
  - name: base
    dir: east
    devices:
      - treads
      - logger
      - grabber
  - name: fill
    system: true
    dir: east
    devices:
      - logger
    inventory:
      - [10, tree]
    program: |
      let repeat = \n.\c. if (n == 0) {} {c; repeat (n-1) c} in
      p <- whereami;
      match p \_. \y.
      repeat 10 (place "tree"; wait (-y); move)
known: [tree]
structures:
  - name: progress
    structure:
      palette:
        '+': [stone, wall]
        '.': [stone]
        '-': [stone, null, fill]
      map: |
        ++++++++++++
        +-.........+
        ++++++++++++
world:
  dsl: |
    {grass}
  palette:
    chars: A-Za-z
    '~': [grass, null, base]
    '.': [grass]
    ' ': [grass]
    '$':
      structure:
        name: progress
      cell: [stone]
  map: |-
    $...............................
    .............First progress bar.
    ................................
    ......................~.........
    $...............................
    .............Second progress bar
    ................................
    ................................
    $...............................
    .............Third progress bar.
    ................................
    ................................
    abcdefghijklmnopqrstuvwxyz......
    ABCDEFGHIJKLMNOPQRSTUVWXYZ......
