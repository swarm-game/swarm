name: Haskell-CI
on:
  push:
    paths:
      - '**.hs'
      - '**.sw'
      - '**.cabal'
      - '*.yaml'
      - 'data/**.yaml'
      - '.github/workflows/haskell-ci-windows.yml'
    branches:
      - "main"
  # reuse the same filter for pull-requests
  pull_request:
    paths:
      - '**.hs'
      - '**.sw'
      - '**.cabal'
      - 'stack.yaml'
      - '*.yaml'
      - 'data/**.yaml'
      - '.github/workflows/haskell-ci-windows.yml'
    branches:
      - "main"
jobs:
  windows:
    name: Simple CI - ${{ matrix.os }} - ghc-${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        cabal: ["3.16.0.0"]
        ghc: ["9.12.1"]
    timeout-minutes:
      60

    steps:
      - uses: actions/checkout@v4
        if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/main'

      - uses: haskell-actions/setup@v2
        id: setup-haskell-cabal
        name: Setup Haskell
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}

      - name: Configure
        run: cabal configure --enable-tests --enable-benchmarks --test-show-details=direct

      - name: Freeze
        run: cabal freeze

      - uses: actions/cache@v4
        name: Cache ~/.cabal/store
        with:
          path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
          key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
            ${{ runner.os }}-${{ matrix.ghc }}-

      - name: Install dependencies
        run: cabal build all --only-dependencies -j --semaphore

      - name: Build
        run: cabal build all

      - name: Test
        run: cabal test all
