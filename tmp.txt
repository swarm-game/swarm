fromList []
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 0 19, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 4 5, lvVar = "x"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Requirements {capReqs = fromList [CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 14 15, _sTerm = TInt 3, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 0 19, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 4 5, lvVar = "x"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Requirements {capReqs = fromList [CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 14 15, _sTerm = TInt 3, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 16, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 8 12, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 16, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 8 12, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 16, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 8 12, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 16, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 8 12, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 16, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 8 12, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 16, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 8 12, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 16, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 8 12, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 16, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 8 12, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 16, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 8 12, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 16, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 8 12, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 16, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 8 12, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 16, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 8 12, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 16, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 8 12, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 16, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 8 12, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 16, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 8 12, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()}),(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 0 19, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 4 5, lvVar = "x"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Requirements {capReqs = fromList [CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 14 15, _sTerm = TInt 3, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 0 19, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 4 5, lvVar = "x"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Requirements {capReqs = fromList [CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 14 15, _sTerm = TInt 3, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 16, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 8 12, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()}),(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 0 19, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 4 5, lvVar = "x"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Requirements {capReqs = fromList [CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 14 15, _sTerm = TInt 3, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 16, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 8 12, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()}),(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 0 19, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 4 5, lvVar = "x"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Requirements {capReqs = fromList [CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 14 15, _sTerm = TInt 3, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 16, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 8 12, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 16, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 8 12, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 16, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 8 12, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()}),(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 0 19, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 4 5, lvVar = "x"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Requirements {capReqs = fromList [CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 14 15, _sTerm = TInt 3, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 0 19, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 4 5, lvVar = "x"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Requirements {capReqs = fromList [CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 14 15, _sTerm = TInt 3, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 34, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 18 30, _sTerm = SBind Nothing Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BUnit) [])})) (Just (Requirements {capReqs = fromList [], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 18 22, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 24 30, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 24 28, _sTerm = TConst Pure, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 29 30, _sTerm = TInt 3, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()}),(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 0 19, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 4 5, lvVar = "x"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Requirements {capReqs = fromList [CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 14 15, _sTerm = TInt 3, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 34, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 18 30, _sTerm = SBind Nothing Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BUnit) [])})) (Just (Requirements {capReqs = fromList [], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 18 22, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 24 30, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 24 28, _sTerm = TConst Pure, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 29 30, _sTerm = TInt 3, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()}),(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 0 19, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 4 5, lvVar = "x"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Requirements {capReqs = fromList [CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 14 15, _sTerm = TInt 3, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 34, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 18 30, _sTerm = SBind Nothing Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BUnit) [])})) (Just (Requirements {capReqs = fromList [], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 18 22, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 24 30, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 24 28, _sTerm = TConst Pure, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 29 30, _sTerm = TInt 3, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 34, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 18 30, _sTerm = SBind Nothing Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BUnit) [])})) (Just (Requirements {capReqs = fromList [], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 18 22, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 24 30, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 24 28, _sTerm = TConst Pure, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 29 30, _sTerm = TInt 3, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()}),(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 0 19, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 4 5, lvVar = "x"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Requirements {capReqs = fromList [CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 14 15, _sTerm = TInt 3, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 34, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 18 30, _sTerm = SBind Nothing Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BUnit) [])})) (Just (Requirements {capReqs = fromList [], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 18 22, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 24 30, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 24 28, _sTerm = TConst Pure, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 29 30, _sTerm = TInt 3, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()}),(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 0 19, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 4 5, lvVar = "x"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Requirements {capReqs = fromList [CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 14 15, _sTerm = TInt 4, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 0 40, _sTerm = SImportIn (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 15 40, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 19 20, lvVar = "e"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Requirements {capReqs = fromList [CExecute Add,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 29 36, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 29 32, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 31 32, _sTerm = TConst Add, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 29 30, _sTerm = TVar "f", _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 33 36, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 33 34, _sTerm = TVar "g", _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 35 36, _sTerm = TInt 3, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()}),(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 0 52, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 4 5, lvVar = "f"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Requirements {capReqs = fromList [CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 14 15, _sTerm = TInt 7, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 20 52, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 24 25, lvVar = "g"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])})) (Just (Requirements {capReqs = fromList [CExecute Mul,CPower,CLambda], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 41 48, _sTerm = SLam (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 42 43, lvVar = "x"}) Nothing (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 45 48, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 45 47, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 46 47, _sTerm = TConst Mul, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 45 46, _sTerm = TInt 2, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 47 48, _sTerm = TVar "x", _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()}),(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 34, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 18 30, _sTerm = SBind Nothing Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BUnit) [])})) (Just (Requirements {capReqs = fromList [], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 18 22, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 24 30, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 24 28, _sTerm = TConst Pure, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 29 30, _sTerm = TInt 3, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()}),(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 0 19, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 4 5, lvVar = "x"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Requirements {capReqs = fromList [CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 14 15, _sTerm = TInt 4, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 0 40, _sTerm = SImportIn (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 15 40, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 19 20, lvVar = "e"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Requirements {capReqs = fromList [CExecute Add,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 29 36, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 29 32, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 31 32, _sTerm = TConst Add, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 29 30, _sTerm = TVar "f", _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 33 36, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 33 34, _sTerm = TVar "g", _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 35 36, _sTerm = TInt 3, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()}),(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 0 52, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 4 5, lvVar = "f"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Requirements {capReqs = fromList [CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 14 15, _sTerm = TInt 7, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 20 52, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 24 25, lvVar = "g"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])})) (Just (Requirements {capReqs = fromList [CExecute Mul,CPower,CLambda], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 41 48, _sTerm = SLam (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 42 43, lvVar = "x"}) Nothing (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 45 48, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 45 47, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 46 47, _sTerm = TConst Mul, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 45 46, _sTerm = TInt 2, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 47 48, _sTerm = TVar "x", _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()}),(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 34, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 18 30, _sTerm = SBind Nothing Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BUnit) [])})) (Just (Requirements {capReqs = fromList [], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 18 22, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 24 30, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 24 28, _sTerm = TConst Pure, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 29 30, _sTerm = TInt 3, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()}),(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 0 19, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 4 5, lvVar = "x"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Requirements {capReqs = fromList [CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 14 15, _sTerm = TInt 4, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 0 60, _sTerm = SImportIn (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 15 60, _sTerm = STydef (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 21 24, lvVar = TDVar {tdVarName = "Bar", tdVarVersion = 0}}) (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}) (Just (TydefInfo {_tydefType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}, _tydefArity = Arity {getArity = 0}})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 35 60, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 39 40, lvVar = "e"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCUser (TDVar {tdVarName = "Bar", tdVarVersion = 0})) [])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Requirements {capReqs = fromList [CExecute Add,CExecute Mul,CPower,CLambda], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 49 56, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 49 52, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 51 52, _sTerm = TConst Add, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 49 50, _sTerm = TVar "f", _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 53 56, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 53 54, _sTerm = TVar "g", _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 55 56, _sTerm = TInt 3, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()}),(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 0 52, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 4 5, lvVar = "f"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Requirements {capReqs = fromList [CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 14 15, _sTerm = TInt 7, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 20 52, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 24 25, lvVar = "g"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])})) (Just (Requirements {capReqs = fromList [CExecute Mul,CPower,CLambda], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 41 48, _sTerm = SLam (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 42 43, lvVar = "x"}) Nothing (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 45 48, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 45 47, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 46 47, _sTerm = TConst Mul, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 45 46, _sTerm = TInt 2, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 47 48, _sTerm = TVar "x", _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()}),(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 34, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 18 30, _sTerm = SBind Nothing Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BUnit) [])})) (Just (Requirements {capReqs = fromList [], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 18 22, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 24 30, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 24 28, _sTerm = TConst Pure, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 29 30, _sTerm = TInt 3, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()}),(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 0 19, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 4 5, lvVar = "x"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Requirements {capReqs = fromList [CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 14 15, _sTerm = TInt 4, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"}
fromList [(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 0 60, _sTerm = SImportIn (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 15 60, _sTerm = STydef (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 21 24, lvVar = TDVar {tdVarName = "Bar", tdVarVersion = 0}}) (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}) (Just (TydefInfo {_tydefType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}, _tydefArity = Arity {getArity = 0}})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 35 60, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 39 40, lvVar = "e"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCUser (TDVar {tdVarName = "Bar", tdVarVersion = 0})) [])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Requirements {capReqs = fromList [CExecute Add,CExecute Mul,CPower,CLambda], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 49 56, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 49 52, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 51 52, _sTerm = TConst Add, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 49 50, _sTerm = TVar "f", _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 53 56, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 53 54, _sTerm = TVar "g", _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "e.sw"})) 55 56, _sTerm = TInt 3, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()}),(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 0 52, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 4 5, lvVar = "f"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Requirements {capReqs = fromList [CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 14 15, _sTerm = TInt 7, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 20 52, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 24 25, lvVar = "g"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])})) (Just (Requirements {capReqs = fromList [CExecute Mul,CPower,CLambda], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 41 48, _sTerm = SLam (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 42 43, lvVar = "x"}) Nothing (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 45 48, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 45 47, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 46 47, _sTerm = TConst Mul, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 45 46, _sTerm = TInt 2, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"})) 47 48, _sTerm = TVar "x", _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF (TCBase BInt) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()}),(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 0 34, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 4 5, lvVar = "m"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])})) (Just (Requirements {capReqs = fromList [CExecute Move,CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 18 30, _sTerm = SBind Nothing Nothing (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BUnit) [])})) (Just (Requirements {capReqs = fromList [], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 18 22, _sTerm = TConst Move, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 24 30, _sTerm = SApp (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 24 28, _sTerm = TConst Pure, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCFun [Fix (TyConF (TCBase BInt) []),Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])])}}) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "m.sw"})) 29 30, _sTerm = TInt 3, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BInt) [])])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()}),(ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"},Module {moduleTerm = Just (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 0 19, _sTerm = SLet LSDef False (LV {lvSrcLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 4 5, lvVar = "x"}) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])})) (Just (Requirements {capReqs = fromList [CPower], devReqs = fromList [], invReqs = fromList []})) (Syntax {_sLoc = SrcLoc (Just (ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "x.sw"})) 14 15, _sTerm = TInt 4, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF (TCBase BInt) [])}}) (Syntax {_sLoc = NoLoc, _sTerm = TConst Noop, _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), _sComments = Comments {_beforeComments = fromList [], _afterComments = fromList []}, _sType = Forall {_ptVars = [], ptBody = Fix (TyConF TCCmd [Fix (TyConF (TCBase BUnit) [])])}}), moduleCtx = <Ctx>, moduleImports = ()})]
ImportLoc {importDir = ImportDir Absolute_ ["home","brent","src","swarm","import-test"], importFile = "f.sw"}
